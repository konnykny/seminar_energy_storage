"""
@Title:     Exercise on Wind Power Calculation Using Weather Data
@Course:    Seminar on Modeling and Simulation for Energy Systems
@Institute: SYDSEN Research Group, AIFB-KIT
@Contact:   Omar <omar.mostafa@kit.edu>
"""
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import math

#%% Loading Data

# Import csv file using pandas read_csv command and select time as the index_col
wind_data = None

# Fill any NaN values in the dataframe with 0
wind_data = None  

# Convert the index to datetime object
wind_data.index = pd.to_datetime(wind_data.index, format='%Y%m%d%H%M')

# Assumed Parameters
air_density = 1.2  # kg/m^3
diameter = 82  # meters
nominal_power = 2.35 # MW
power_coeff =  0.47

#%% Wind Power Model

# Create a functon to calculate wind power using parameters
def calculate_wind_power(wind_speed, diameter, air_density):
    """
    Calculate the power generated by a wind turbine.

    Parameters
    ----------
    wind_speed : list or array
        Speed values in m/s.
    diameter : float
        Diameter of the wind turbine in meters.
    air_density : float
        Air density in kg/m^3.

    Returns
    -------
    wind_power : numpy array
        Power values in MW for each wind speed.
    """
    wind_power = 0.5 * air_density *  ( math.pi * diameter ^2 ) * wind_speed^3 * power_coeff
    return wind_power

#%% Applying Model to Data
"./input/wind_data.csv"


# Make a new dataframe to filter the data for year 2019
wind_data_2019 = pd.DataFrame()

# Filter data of wind speed for year 2019
wind_data_2019['Wind Speed m/s'] = None

# Use the function above to calculate wind power using the wind speed data
wind_data_2019['Wind Power MW'] = None

# Adjust the wind turbine output to min & max speeds (<3m/s = 0, >25m/s = 0), and max power output (2.35MW)
wind_data_2019['Wind Power MW'] = None


#%% Plotting Results

# Plot the wind power over the year
plt.figure()
None
plt.show()

# PLot the wind power over one week
plt.figure()
None
plt.show()

# Plot the weekly average wind speeds for year 2019
plt.figure()
None
plt.show()

# Plot the wind speed distribution histogram
plt.figure()
None
plt.show()

# Plot a comparison between weekly average actual and simulated power (use column 'Leistung' from original data as the actual power)
plt.figure()
None
plt.show()